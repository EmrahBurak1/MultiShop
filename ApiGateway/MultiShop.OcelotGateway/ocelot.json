{
  "Routes": [
    //Catalog microservice'e gelen isteklerin yönlendirilmesi
    {
      //Downstream tarafı ise bizim client tarafına gönderdiğimiz kısım. Nasıl karşılayıp nasıl gönderdiğimizi belirlediğimiz kısım
      "DownstreamPathTemplate": "/api/{everything}", //everything özel bir komuttur api den sonra ne gelirse gelsin downstreamde karşıla anlamına gelir.
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7070
        }
      ],
      //Upstream tarafı client tarafından bize gelen isteğin geldiği kısım
      "UpstreamPathTemplate": "/services/catalog/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme", //Key sağlayıcıyı bu şekilde belirtebiliriz. Opsiyonel bir alandır.
        "AllowedScopes": [ "CatalogFullPermission" ] //Catalog mikroservice'e yapılacak isteklerde hangi aralıklara sahip olacağımızı belirlediğimiz kısım.
      }
    },
    //Discount microservice'e gelen isteklerin yönlendirilmesi
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7071
        }
      ],
      "UpstreamPathTemplate": "/services/discount/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "DiscountFullPermission" ]
      }
    },
    //Order microservice'e gelen isteklerin yönlendirilmesi
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7072
        }
      ],
      "UpstreamPathTemplate": "/services/order/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "OrderFullPermission" ]
      }
    },
    //Cargo microservice'e gelen isteklerin yönlendirilmesi
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7073
        }
      ],
      "UpstreamPathTemplate": "/services/cargo/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "CargoFullPermission" ]
      }
    },
    //Basket microservice'e gelen isteklerin yönlendirilmesi
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7074
        }
      ],
      "UpstreamPathTemplate": "/services/basket/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "BasketFullPermission" ]
      }
    },
    //Comment microservice'e gelen isteklerin yönlendirilmesi
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7075
        }
      ],
      "UpstreamPathTemplate": "/services/comment/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "CommentFullPermission" ]
      }
    },
    //Payment microservice'e gelen isteklerin yönlendirilmesi
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7076
        }
      ],
      "UpstreamPathTemplate": "/services/payment/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "PaymentFullPermission" ]
      }
    },
    //Images microservice'e gelen isteklerin yönlendirilmesi
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7077
        }
      ],
      "UpstreamPathTemplate": "/services/images/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "ImagesFullPermission" ]
      }
    },
    //Message microservice'e gelen isteklerin yönlendirilmesi
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7078
        }
      ],
      "UpstreamPathTemplate": "/services/message/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "MessageFullPermission" ]
      }
    }
  ],
  "GlobalConfiguration": {
    "BaseUrl": "http://localhost:5000"
  }
}